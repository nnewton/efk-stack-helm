# Default values for elk.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
elasticsearch:
  enabled: true
  image:
    tag: "6.7.2"
  client:
    heapSize: "1024m"
    serviceType: NodePort
    httpNodePort: 30200
    resources:
      limits:
        cpu: "2"
      requests:
        cpu: "25m"
        memory: "1Gi"
  data:
    persistence:
      size: "100Gi"
    heapSize: "2048m"
    resources:
      limits:
        cpu: "2"
      requests:
        cpu: "25m"
        memory: "2Gi"

kibana:
  enabled: true
  service:
    type: NodePort
  image:
    tag: "6.7.2"
  env:
    ELASTICSEARCH_HOSTS: http://RELEASENAME-elasticsearch-client:9200

fluentd:
  enabled: true
  output:
    host: RELEASENAME-elasticsearch-client

fluentd-elasticsearch:
  enabled: true 
  elasticsearch:
    host: RELEASENAME-elasticsearch-client

nginx-ldapauth-proxy:
  enabled: false
  # Example config to get it working with ELK. Adjust as you need to.
  # proxy:
  #   port: 5601
  #   # This is the internal hostname for the kibana service
  #   host: "elk-kibana.default.svc.cluster.local"
  #   authName: "ELK:Infrastructure:LDAP"
  #   ldapHost: "ldap.example.com"
  #   ldapDN: "dc=example,dc=com"
  #   ldapFilter: "objectClass=organizationalPerson"
  #   ldapBindDN: "cn=reader,dc=example,dc=com"
  #   requires:
  #     - name: "ELK-USER"
  #       filter: "cn=elkuser,ou=groups,dc=example,dc=com"
  # ingress:
  #   enabled: true
  #   hosts:
  #     - "elk.example.com"
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #   tls:
  #     - hosts:
  #       - elk.example.com
  #       secretName: example-elk-tls
  # secrets:
  #   ldapBindPassword: PASSWORD
  #
  
elasticsearch-curator:
  enabled: false

elasticsearch-exporter:
  enabled: false

elastalert:
  enabled: true
  writebackIndex: elastalert
  elasticsearch:
    host: RELEASENAME-elasticsearch-client
